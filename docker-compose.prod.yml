version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel_app_prod
    restart: unless-stopped
    environment:
      - APP_ENV=production
      - QUEUE_CONNECTION=database
    volumes:
      - ./storage:/var/www/html/storage
      - ./public/storage:/var/www/html/public/storage
      - ./public/photos:/var/www/html/public/photos
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy

  nginx:
    image: nginx:alpine
    container_name: laravel_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
      - ./docker/nginx/ssl/:/etc/nginx/ssl/
      - /etc/letsencrypt:/etc/letsencrypt:ro
    networks:
      - app-network
    depends_on:
      - app

  db:
    image: mysql:8.0
    container_name: laravel_db_prod
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ecom_walmart_db
      MYSQL_ROOT_PASSWORD: 120811Trung@
      MYSQL_PASSWORD: 120811Trung@
      MYSQL_USER: ecom_walmart_user
    volumes:
      - db_data:/var/lib/mysql
      - ./database/e-shop.sql:/docker-entrypoint-initdb.d/e-shop.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: laravel_redis_prod
    restart: unless-stopped
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: laravel_phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: laravel_db_prod
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: 120811Trung@
      MYSQL_ROOT_PASSWORD: 120811Trung@
    ports:
      - "8080:80"
    networks:
      - app-network
    depends_on:
      - db

  # Queue worker using Database driver
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel_worker_prod
    restart: unless-stopped
    working_dir: /var/www/html
    command: php artisan queue:work database --sleep=3 --tries=3 --timeout=120 --queue=default
    environment:
      - APP_ENV=production
      - QUEUE_CONNECTION=database
    volumes:
      - ./storage:/var/www/html/storage
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
    driver: local